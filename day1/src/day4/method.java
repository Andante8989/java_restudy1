package day4;

public class method {
	int sum(int a , int b) {  // a, b 매개변수
		return a + b;
	}

	public static void main(String[] args) {
		// 다른 프로그래밍 언어에는 함수라는 것이 별도로 존재한다. 하지만 자바는 클래스를 떠나 존재하는 것은 
		// 있을 수 없기 때문에 자바의 함수는 따로 존재하지 않고 클래스 내에 존재한다.
		// 자바는 이러한 클래스 내의 함수를 메소드라고 부른다
		
		// 메소드를 사용하는 이유?
		// 가끔 프로그래밍을 하다 보면 똑같은 내용을 자신이 반복해서 적고 있는 것을 발견할 때가 있다. 이 때가 바로 메소드가
		// 필요한 때이다. 여러 번 박복해서 사용된다는 것은 언제고 또다시 사용할 만한 가치가 있는 부분이라는 뜻이다.
		
		int a = 3;      // 3, 4 는 인수
		int b = 4;
		method method = new method();
		int c = method.sum(a, b);
		
		// 위 코드는 sum메소드에 3,4라는 입력값을 전달하며 7이라는 값을 돌려받는 예이다.
		
		// 매개변수와 인수
		// 배개변수와 인수는 홍용해서 사용되는 헷갈리는 용어이므로 잘 기억해 두자. 매개변수는 메소드에 입력으로 전달된 값을
		// 받는 변수를 의미하고 메소드를 호출할 때 전달하는 입력값을 의미한다.
		
		// 메소드의 입력값과 리턴값
		// 입력값 ---> 메소드() -----> 리턴값
		// 메소드의 구조
		// 리턴자료형 메소드명 (입력자료형1 매개변수1, 입력자료형2 매개변수2...) {
		//    return 리턴값;  // 리턴자료형이 void인 경우에는 return 문이 필요없다
		// }
		
		// 리턴자료형은 메소드 수행 후 돌려줄 값의 자료형을 의미한다. 메소드의 리턴값은 return이라는 명령을 사용한다
		
		// 일반적인 메소드
		// 입력 값 = int 자료형 a, int 자료형 b
		// 리턴 값 = int 자료형
		
		// 리턴값 받을 변수 = 객체.메소드명(입력인수1, 입력인수2, ....)
		// sum 메소드의 사용 예는 다음과 같다
		method sample = new method();
		int result = sample.sum(3, 4);
		// 위에서 보듯이 sample.sun(3,4) 호출 후 리턴값을 저장하는 result의 자료형은 int로 해야만 한다. 
		// 왜냐하면 sum 메소드의 리턴타입이 int로 되어 있기 때문이다. sum 메소드의 리턴타입은 int sum(int a, int b) {...
		// 에서 보듯이 메소드명 (sum)바로 좌측에 표기하도록 되어있다.
		
		
		
		
		
		

	}

}
